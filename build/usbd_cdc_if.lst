ARM GAS  /tmp/ccKBdeFC.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbd_cdc_if.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	UserRxBufferHS,2048,4
  18              		.comm	UserTxBufferHS,2048,4
  19              		.global	USBD_Interface_fops_HS
  20              		.section	.data.USBD_Interface_fops_HS,"aw",%progbits
  21              		.align	2
  24              	USBD_Interface_fops_HS:
  25 0000 00000000 		.word	CDC_Init_HS
  26 0004 00000000 		.word	CDC_DeInit_HS
  27 0008 00000000 		.word	CDC_Control_HS
  28 000c 00000000 		.word	CDC_Receive_HS
  29              		.section	.text.CDC_Init_HS,"ax",%progbits
  30              		.align	1
  31              		.syntax unified
  32              		.thumb
  33              		.thumb_func
  34              		.fpu fpv4-sp-d16
  36              	CDC_Init_HS:
  37              	.LFB124:
  38              		.file 1 "Src/usbd_cdc_if.c"
   1:Src/usbd_cdc_if.c **** /**
   2:Src/usbd_cdc_if.c ****   ******************************************************************************
   3:Src/usbd_cdc_if.c ****   * @file           : usbd_cdc_if.c
   4:Src/usbd_cdc_if.c ****   * @brief          :
   5:Src/usbd_cdc_if.c ****   ******************************************************************************
   6:Src/usbd_cdc_if.c ****   * This notice applies to any and all portions of this file
   7:Src/usbd_cdc_if.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/usbd_cdc_if.c ****   * USER CODE END. Other portions of this file, whether 
   9:Src/usbd_cdc_if.c ****   * inserted by the user or by software development tools
  10:Src/usbd_cdc_if.c ****   * are owned by their respective copyright owners.
  11:Src/usbd_cdc_if.c ****   *
  12:Src/usbd_cdc_if.c ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
  13:Src/usbd_cdc_if.c ****   * All rights reserved.
  14:Src/usbd_cdc_if.c ****   *
  15:Src/usbd_cdc_if.c ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/usbd_cdc_if.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/usbd_cdc_if.c ****   *
  18:Src/usbd_cdc_if.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/usbd_cdc_if.c ****   *    this list of conditions and the following disclaimer.
  20:Src/usbd_cdc_if.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/usbd_cdc_if.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/usbd_cdc_if.c ****   *    and/or other materials provided with the distribution.
ARM GAS  /tmp/ccKBdeFC.s 			page 2


  23:Src/usbd_cdc_if.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/usbd_cdc_if.c ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/usbd_cdc_if.c ****   *    derived from this software without specific written permission.
  26:Src/usbd_cdc_if.c ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/usbd_cdc_if.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/usbd_cdc_if.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/usbd_cdc_if.c ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/usbd_cdc_if.c ****   *    this license is void and will automatically terminate your rights under 
  31:Src/usbd_cdc_if.c ****   *    this license. 
  32:Src/usbd_cdc_if.c ****   *
  33:Src/usbd_cdc_if.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/usbd_cdc_if.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/usbd_cdc_if.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/usbd_cdc_if.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/usbd_cdc_if.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/usbd_cdc_if.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/usbd_cdc_if.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/usbd_cdc_if.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/usbd_cdc_if.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/usbd_cdc_if.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/usbd_cdc_if.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/usbd_cdc_if.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/usbd_cdc_if.c ****   *
  46:Src/usbd_cdc_if.c ****   ******************************************************************************
  47:Src/usbd_cdc_if.c **** */
  48:Src/usbd_cdc_if.c **** 
  49:Src/usbd_cdc_if.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/usbd_cdc_if.c **** #include "usbd_cdc_if.h"
  51:Src/usbd_cdc_if.c **** /* USER CODE BEGIN INCLUDE */
  52:Src/usbd_cdc_if.c **** /* USER CODE END INCLUDE */
  53:Src/usbd_cdc_if.c **** 
  54:Src/usbd_cdc_if.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  55:Src/usbd_cdc_if.c ****   * @{
  56:Src/usbd_cdc_if.c ****   */
  57:Src/usbd_cdc_if.c **** 
  58:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC 
  59:Src/usbd_cdc_if.c ****   * @brief usbd core module
  60:Src/usbd_cdc_if.c ****   * @{
  61:Src/usbd_cdc_if.c ****   */ 
  62:Src/usbd_cdc_if.c **** 
  63:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_Private_TypesDefinitions
  64:Src/usbd_cdc_if.c ****   * @{
  65:Src/usbd_cdc_if.c ****   */ 
  66:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  67:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_TYPES */ 
  68:Src/usbd_cdc_if.c **** /**
  69:Src/usbd_cdc_if.c ****   * @}
  70:Src/usbd_cdc_if.c ****   */ 
  71:Src/usbd_cdc_if.c **** 
  72:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_Private_Defines
  73:Src/usbd_cdc_if.c ****   * @{
  74:Src/usbd_cdc_if.c ****   */ 
  75:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  76:Src/usbd_cdc_if.c **** /* Define size for the receive and transmit buffer over CDC */
  77:Src/usbd_cdc_if.c **** /* It's up to user to redefine and/or remove those define */
  78:Src/usbd_cdc_if.c **** #define APP_RX_DATA_SIZE  2048
  79:Src/usbd_cdc_if.c **** #define APP_TX_DATA_SIZE  2048
ARM GAS  /tmp/ccKBdeFC.s 			page 3


  80:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_DEFINES */
  81:Src/usbd_cdc_if.c **** /**
  82:Src/usbd_cdc_if.c ****   * @}
  83:Src/usbd_cdc_if.c ****   */ 
  84:Src/usbd_cdc_if.c **** 
  85:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_Private_Macros
  86:Src/usbd_cdc_if.c ****   * @{
  87:Src/usbd_cdc_if.c ****   */ 
  88:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_MACRO */
  89:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_MACRO */
  90:Src/usbd_cdc_if.c **** 
  91:Src/usbd_cdc_if.c **** /**
  92:Src/usbd_cdc_if.c ****   * @}
  93:Src/usbd_cdc_if.c ****   */ 
  94:Src/usbd_cdc_if.c ****   
  95:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_Private_Variables
  96:Src/usbd_cdc_if.c ****   * @{
  97:Src/usbd_cdc_if.c ****   */
  98:Src/usbd_cdc_if.c **** 
  99:Src/usbd_cdc_if.c **** /* Create buffer for reception and transmission           */
 100:Src/usbd_cdc_if.c **** /* It's up to user to redefine and/or remove those define */
 101:Src/usbd_cdc_if.c **** /* Received Data over USB are stored in this buffer       */
 102:Src/usbd_cdc_if.c **** uint8_t UserRxBufferHS[APP_RX_DATA_SIZE];
 103:Src/usbd_cdc_if.c **** 
 104:Src/usbd_cdc_if.c **** /* Send Data over USB CDC are stored in this buffer       */
 105:Src/usbd_cdc_if.c **** uint8_t UserTxBufferHS[APP_TX_DATA_SIZE];
 106:Src/usbd_cdc_if.c **** 
 107:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_VARIABLES */
 108:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_VARIABLES */
 109:Src/usbd_cdc_if.c **** 
 110:Src/usbd_cdc_if.c **** /**
 111:Src/usbd_cdc_if.c ****   * @}
 112:Src/usbd_cdc_if.c ****   */ 
 113:Src/usbd_cdc_if.c ****   
 114:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Exported_Variables
 115:Src/usbd_cdc_if.c ****   * @{
 116:Src/usbd_cdc_if.c ****   */ 
 117:Src/usbd_cdc_if.c ****   extern USBD_HandleTypeDef hUsbDeviceHS;  
 118:Src/usbd_cdc_if.c **** /* USER CODE BEGIN EXPORTED_VARIABLES */
 119:Src/usbd_cdc_if.c **** /* USER CODE END EXPORTED_VARIABLES */
 120:Src/usbd_cdc_if.c **** 
 121:Src/usbd_cdc_if.c **** /**
 122:Src/usbd_cdc_if.c ****   * @}
 123:Src/usbd_cdc_if.c ****   */ 
 124:Src/usbd_cdc_if.c ****   
 125:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_Private_FunctionPrototypes
 126:Src/usbd_cdc_if.c ****   * @{
 127:Src/usbd_cdc_if.c ****   */
 128:Src/usbd_cdc_if.c **** 
 129:Src/usbd_cdc_if.c **** static int8_t CDC_Init_HS     (void);
 130:Src/usbd_cdc_if.c **** static int8_t CDC_DeInit_HS   (void);
 131:Src/usbd_cdc_if.c **** static int8_t CDC_Control_HS  (uint8_t cmd, uint8_t* pbuf, uint16_t length);
 132:Src/usbd_cdc_if.c **** static int8_t CDC_Receive_HS  (uint8_t* pbuf, uint32_t *Len);
 133:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_FUNCTIONS_DECLARATION */
 134:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_FUNCTIONS_DECLARATION */
 135:Src/usbd_cdc_if.c **** 
 136:Src/usbd_cdc_if.c **** /**
ARM GAS  /tmp/ccKBdeFC.s 			page 4


 137:Src/usbd_cdc_if.c ****   * @}
 138:Src/usbd_cdc_if.c ****   */ 
 139:Src/usbd_cdc_if.c ****   
 140:Src/usbd_cdc_if.c **** 
 141:Src/usbd_cdc_if.c **** USBD_CDC_ItfTypeDef USBD_Interface_fops_HS = 
 142:Src/usbd_cdc_if.c **** {
 143:Src/usbd_cdc_if.c ****   CDC_Init_HS,
 144:Src/usbd_cdc_if.c ****   CDC_DeInit_HS,
 145:Src/usbd_cdc_if.c ****   CDC_Control_HS,  
 146:Src/usbd_cdc_if.c ****   CDC_Receive_HS
 147:Src/usbd_cdc_if.c **** };
 148:Src/usbd_cdc_if.c **** 
 149:Src/usbd_cdc_if.c **** /* Private functions ---------------------------------------------------------*/
 150:Src/usbd_cdc_if.c **** 
 151:Src/usbd_cdc_if.c **** /**
 152:Src/usbd_cdc_if.c ****   * @brief  CDC_Init_HS
 153:Src/usbd_cdc_if.c ****   *         Initializes the CDC media low layer over the USB HS IP
 154:Src/usbd_cdc_if.c ****   * @param  None
 155:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 156:Src/usbd_cdc_if.c ****   */
 157:Src/usbd_cdc_if.c **** static int8_t CDC_Init_HS(void)
 158:Src/usbd_cdc_if.c **** { 
  39              		.loc 1 158 0
  40              		.cfi_startproc
  41              		@ args = 0, pretend = 0, frame = 0
  42              		@ frame_needed = 1, uses_anonymous_args = 0
  43 0000 80B5     		push	{r7, lr}
  44              	.LCFI0:
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
  48 0002 00AF     		add	r7, sp, #0
  49              	.LCFI1:
  50              		.cfi_def_cfa_register 7
 159:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 8 */ 
 160:Src/usbd_cdc_if.c ****   /* Set Application Buffers */
 161:Src/usbd_cdc_if.c ****   USBD_CDC_SetTxBuffer(&hUsbDeviceHS, UserTxBufferHS, 0);
  51              		.loc 1 161 0
  52 0004 0022     		movs	r2, #0
  53 0006 0549     		ldr	r1, .L3
  54 0008 0548     		ldr	r0, .L3+4
  55 000a FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
 162:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceHS, UserRxBufferHS);
  56              		.loc 1 162 0
  57 000e 0549     		ldr	r1, .L3+8
  58 0010 0348     		ldr	r0, .L3+4
  59 0012 FFF7FEFF 		bl	USBD_CDC_SetRxBuffer
 163:Src/usbd_cdc_if.c ****   return (USBD_OK);
  60              		.loc 1 163 0
  61 0016 0023     		movs	r3, #0
 164:Src/usbd_cdc_if.c ****   /* USER CODE END 8 */ 
 165:Src/usbd_cdc_if.c **** }
  62              		.loc 1 165 0
  63 0018 1846     		mov	r0, r3
  64 001a 80BD     		pop	{r7, pc}
  65              	.L4:
  66              		.align	2
ARM GAS  /tmp/ccKBdeFC.s 			page 5


  67              	.L3:
  68 001c 00000000 		.word	UserTxBufferHS
  69 0020 00000000 		.word	hUsbDeviceHS
  70 0024 00000000 		.word	UserRxBufferHS
  71              		.cfi_endproc
  72              	.LFE124:
  74              		.section	.text.CDC_DeInit_HS,"ax",%progbits
  75              		.align	1
  76              		.syntax unified
  77              		.thumb
  78              		.thumb_func
  79              		.fpu fpv4-sp-d16
  81              	CDC_DeInit_HS:
  82              	.LFB125:
 166:Src/usbd_cdc_if.c **** 
 167:Src/usbd_cdc_if.c **** /**
 168:Src/usbd_cdc_if.c ****   * @brief  CDC_DeInit_HS
 169:Src/usbd_cdc_if.c ****   *         DeInitializes the CDC media low layer
 170:Src/usbd_cdc_if.c ****   * @param  None
 171:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 172:Src/usbd_cdc_if.c ****   */
 173:Src/usbd_cdc_if.c **** static int8_t CDC_DeInit_HS(void)
 174:Src/usbd_cdc_if.c **** {
  83              		.loc 1 174 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 1, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88 0000 80B4     		push	{r7}
  89              	.LCFI2:
  90              		.cfi_def_cfa_offset 4
  91              		.cfi_offset 7, -4
  92 0002 00AF     		add	r7, sp, #0
  93              	.LCFI3:
  94              		.cfi_def_cfa_register 7
 175:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 9 */ 
 176:Src/usbd_cdc_if.c ****   return (USBD_OK);
  95              		.loc 1 176 0
  96 0004 0023     		movs	r3, #0
 177:Src/usbd_cdc_if.c ****   /* USER CODE END 9 */ 
 178:Src/usbd_cdc_if.c **** }
  97              		.loc 1 178 0
  98 0006 1846     		mov	r0, r3
  99 0008 BD46     		mov	sp, r7
 100              	.LCFI4:
 101              		.cfi_def_cfa_register 13
 102              		@ sp needed
 103 000a 5DF8047B 		ldr	r7, [sp], #4
 104              	.LCFI5:
 105              		.cfi_restore 7
 106              		.cfi_def_cfa_offset 0
 107 000e 7047     		bx	lr
 108              		.cfi_endproc
 109              	.LFE125:
 111              		.section	.text.CDC_Control_HS,"ax",%progbits
 112              		.align	1
 113              		.syntax unified
ARM GAS  /tmp/ccKBdeFC.s 			page 6


 114              		.thumb
 115              		.thumb_func
 116              		.fpu fpv4-sp-d16
 118              	CDC_Control_HS:
 119              	.LFB126:
 179:Src/usbd_cdc_if.c **** 
 180:Src/usbd_cdc_if.c **** /**
 181:Src/usbd_cdc_if.c ****   * @brief  CDC_Control_HS
 182:Src/usbd_cdc_if.c ****   *         Manage the CDC class requests
 183:Src/usbd_cdc_if.c ****   * @param  cmd: Command code            
 184:Src/usbd_cdc_if.c ****   * @param  pbuf: Buffer containing command data (request parameters)
 185:Src/usbd_cdc_if.c ****   * @param  length: Number of data to be sent (in bytes)
 186:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 187:Src/usbd_cdc_if.c ****   */
 188:Src/usbd_cdc_if.c **** static int8_t CDC_Control_HS  (uint8_t cmd, uint8_t* pbuf, uint16_t length)
 189:Src/usbd_cdc_if.c **** { 
 120              		.loc 1 189 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 8
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125 0000 80B4     		push	{r7}
 126              	.LCFI6:
 127              		.cfi_def_cfa_offset 4
 128              		.cfi_offset 7, -4
 129 0002 83B0     		sub	sp, sp, #12
 130              	.LCFI7:
 131              		.cfi_def_cfa_offset 16
 132 0004 00AF     		add	r7, sp, #0
 133              	.LCFI8:
 134              		.cfi_def_cfa_register 7
 135 0006 0346     		mov	r3, r0
 136 0008 3960     		str	r1, [r7]
 137 000a FB71     		strb	r3, [r7, #7]
 138 000c 1346     		mov	r3, r2	@ movhi
 139 000e BB80     		strh	r3, [r7, #4]	@ movhi
 190:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 10 */
 191:Src/usbd_cdc_if.c ****   switch (cmd)
 140              		.loc 1 191 0
 141 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 142 0012 232B     		cmp	r3, #35
 143 0014 4AD8     		bhi	.L21
 144 0016 01A2     		adr	r2, .L10
 145 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 146              		.p2align 2
 147              	.L10:
 148 001c AD000000 		.word	.L21+1
 149 0020 AD000000 		.word	.L21+1
 150 0024 AD000000 		.word	.L21+1
 151 0028 AD000000 		.word	.L21+1
 152 002c AD000000 		.word	.L21+1
 153 0030 AD000000 		.word	.L21+1
 154 0034 AD000000 		.word	.L21+1
 155 0038 AD000000 		.word	.L21+1
 156 003c AD000000 		.word	.L21+1
 157 0040 AD000000 		.word	.L21+1
 158 0044 AD000000 		.word	.L21+1
ARM GAS  /tmp/ccKBdeFC.s 			page 7


 159 0048 AD000000 		.word	.L21+1
 160 004c AD000000 		.word	.L21+1
 161 0050 AD000000 		.word	.L21+1
 162 0054 AD000000 		.word	.L21+1
 163 0058 AD000000 		.word	.L21+1
 164 005c AD000000 		.word	.L21+1
 165 0060 AD000000 		.word	.L21+1
 166 0064 AD000000 		.word	.L21+1
 167 0068 AD000000 		.word	.L21+1
 168 006c AD000000 		.word	.L21+1
 169 0070 AD000000 		.word	.L21+1
 170 0074 AD000000 		.word	.L21+1
 171 0078 AD000000 		.word	.L21+1
 172 007c AD000000 		.word	.L21+1
 173 0080 AD000000 		.word	.L21+1
 174 0084 AD000000 		.word	.L21+1
 175 0088 AD000000 		.word	.L21+1
 176 008c AD000000 		.word	.L21+1
 177 0090 AD000000 		.word	.L21+1
 178 0094 AD000000 		.word	.L21+1
 179 0098 AD000000 		.word	.L21+1
 180 009c AD000000 		.word	.L21+1
 181 00a0 AD000000 		.word	.L21+1
 182 00a4 AD000000 		.word	.L21+1
 183 00a8 AD000000 		.word	.L21+1
 184              		.p2align 1
 185              	.L21:
 192:Src/usbd_cdc_if.c ****   {
 193:Src/usbd_cdc_if.c ****   case CDC_SEND_ENCAPSULATED_COMMAND:
 194:Src/usbd_cdc_if.c ****  
 195:Src/usbd_cdc_if.c ****     break;
 196:Src/usbd_cdc_if.c **** 
 197:Src/usbd_cdc_if.c ****   case CDC_GET_ENCAPSULATED_RESPONSE:
 198:Src/usbd_cdc_if.c ****  
 199:Src/usbd_cdc_if.c ****     break;
 200:Src/usbd_cdc_if.c **** 
 201:Src/usbd_cdc_if.c ****   case CDC_SET_COMM_FEATURE:
 202:Src/usbd_cdc_if.c ****  
 203:Src/usbd_cdc_if.c ****     break;
 204:Src/usbd_cdc_if.c **** 
 205:Src/usbd_cdc_if.c ****   case CDC_GET_COMM_FEATURE:
 206:Src/usbd_cdc_if.c **** 
 207:Src/usbd_cdc_if.c ****     break;
 208:Src/usbd_cdc_if.c **** 
 209:Src/usbd_cdc_if.c ****   case CDC_CLEAR_COMM_FEATURE:
 210:Src/usbd_cdc_if.c **** 
 211:Src/usbd_cdc_if.c ****     break;
 212:Src/usbd_cdc_if.c **** 
 213:Src/usbd_cdc_if.c ****   /*******************************************************************************/
 214:Src/usbd_cdc_if.c ****   /* Line Coding Structure                                                       */
 215:Src/usbd_cdc_if.c ****   /*-----------------------------------------------------------------------------*/
 216:Src/usbd_cdc_if.c ****   /* Offset | Field       | Size | Value  | Description                          */
 217:Src/usbd_cdc_if.c ****   /* 0      | dwDTERate   |   4  | Number |Data terminal rate, in bits per second*/
 218:Src/usbd_cdc_if.c ****   /* 4      | bCharFormat |   1  | Number | Stop bits                            */
 219:Src/usbd_cdc_if.c ****   /*                                        0 - 1 Stop bit                       */
 220:Src/usbd_cdc_if.c ****   /*                                        1 - 1.5 Stop bits                    */
 221:Src/usbd_cdc_if.c ****   /*                                        2 - 2 Stop bits                      */
ARM GAS  /tmp/ccKBdeFC.s 			page 8


 222:Src/usbd_cdc_if.c ****   /* 5      | bParityType |  1   | Number | Parity                               */
 223:Src/usbd_cdc_if.c ****   /*                                        0 - None                             */
 224:Src/usbd_cdc_if.c ****   /*                                        1 - Odd                              */ 
 225:Src/usbd_cdc_if.c ****   /*                                        2 - Even                             */
 226:Src/usbd_cdc_if.c ****   /*                                        3 - Mark                             */
 227:Src/usbd_cdc_if.c ****   /*                                        4 - Space                            */
 228:Src/usbd_cdc_if.c ****   /* 6      | bDataBits  |   1   | Number Data bits (5, 6, 7, 8 or 16).          */
 229:Src/usbd_cdc_if.c ****   /*******************************************************************************/
 230:Src/usbd_cdc_if.c ****   case CDC_SET_LINE_CODING:   
 231:Src/usbd_cdc_if.c **** 	
 232:Src/usbd_cdc_if.c ****     break;
 233:Src/usbd_cdc_if.c **** 
 234:Src/usbd_cdc_if.c ****   case CDC_GET_LINE_CODING:     
 235:Src/usbd_cdc_if.c **** 
 236:Src/usbd_cdc_if.c ****     break;
 237:Src/usbd_cdc_if.c **** 
 238:Src/usbd_cdc_if.c ****   case CDC_SET_CONTROL_LINE_STATE:
 239:Src/usbd_cdc_if.c **** 
 240:Src/usbd_cdc_if.c ****     break;
 241:Src/usbd_cdc_if.c **** 
 242:Src/usbd_cdc_if.c ****   case CDC_SEND_BREAK:
 243:Src/usbd_cdc_if.c ****  
 244:Src/usbd_cdc_if.c ****     break;    
 245:Src/usbd_cdc_if.c ****     
 246:Src/usbd_cdc_if.c ****   default:
 247:Src/usbd_cdc_if.c ****     break;
 186              		.loc 1 247 0
 187 00ac 00BF     		nop
 248:Src/usbd_cdc_if.c ****   }
 249:Src/usbd_cdc_if.c **** 
 250:Src/usbd_cdc_if.c ****   return (USBD_OK);
 188              		.loc 1 250 0
 189 00ae 0023     		movs	r3, #0
 251:Src/usbd_cdc_if.c ****   /* USER CODE END 10 */
 252:Src/usbd_cdc_if.c **** }
 190              		.loc 1 252 0
 191 00b0 1846     		mov	r0, r3
 192 00b2 0C37     		adds	r7, r7, #12
 193              	.LCFI9:
 194              		.cfi_def_cfa_offset 4
 195 00b4 BD46     		mov	sp, r7
 196              	.LCFI10:
 197              		.cfi_def_cfa_register 13
 198              		@ sp needed
 199 00b6 5DF8047B 		ldr	r7, [sp], #4
 200              	.LCFI11:
 201              		.cfi_restore 7
 202              		.cfi_def_cfa_offset 0
 203 00ba 7047     		bx	lr
 204              		.cfi_endproc
 205              	.LFE126:
 207              		.section	.text.CDC_Receive_HS,"ax",%progbits
 208              		.align	1
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 212              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccKBdeFC.s 			page 9


 214              	CDC_Receive_HS:
 215              	.LFB127:
 253:Src/usbd_cdc_if.c **** 
 254:Src/usbd_cdc_if.c **** /**
 255:Src/usbd_cdc_if.c ****   * @brief  CDC_Receive_HS
 256:Src/usbd_cdc_if.c ****   *         Data received over USB OUT endpoint are sent over CDC interface 
 257:Src/usbd_cdc_if.c ****   *         through this function.
 258:Src/usbd_cdc_if.c ****   *           
 259:Src/usbd_cdc_if.c ****   *         @note
 260:Src/usbd_cdc_if.c ****   *         This function will block any OUT packet reception on USB endpoint 
 261:Src/usbd_cdc_if.c ****   *         untill exiting this function. If you exit this function before transfer
 262:Src/usbd_cdc_if.c ****   *         is complete on CDC interface (ie. using DMA controller) it will result 
 263:Src/usbd_cdc_if.c ****   *         in receiving more data while previous ones are still not sent.
 264:Src/usbd_cdc_if.c ****   *                 
 265:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be received
 266:Src/usbd_cdc_if.c ****   * @param  Len: Number of data received (in bytes)
 267:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 268:Src/usbd_cdc_if.c ****   */
 269:Src/usbd_cdc_if.c **** static int8_t CDC_Receive_HS (uint8_t* Buf, uint32_t *Len)
 270:Src/usbd_cdc_if.c **** {
 216              		.loc 1 270 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 8
 219              		@ frame_needed = 1, uses_anonymous_args = 0
 220 0000 80B5     		push	{r7, lr}
 221              	.LCFI12:
 222              		.cfi_def_cfa_offset 8
 223              		.cfi_offset 7, -8
 224              		.cfi_offset 14, -4
 225 0002 82B0     		sub	sp, sp, #8
 226              	.LCFI13:
 227              		.cfi_def_cfa_offset 16
 228 0004 00AF     		add	r7, sp, #0
 229              	.LCFI14:
 230              		.cfi_def_cfa_register 7
 231 0006 7860     		str	r0, [r7, #4]
 232 0008 3960     		str	r1, [r7]
 271:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 11 */ 
 272:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceHS, &Buf[0]);
 233              		.loc 1 272 0
 234 000a 7968     		ldr	r1, [r7, #4]
 235 000c 0548     		ldr	r0, .L24
 236 000e FFF7FEFF 		bl	USBD_CDC_SetRxBuffer
 273:Src/usbd_cdc_if.c ****   USBD_CDC_ReceivePacket(&hUsbDeviceHS);
 237              		.loc 1 273 0
 238 0012 0448     		ldr	r0, .L24
 239 0014 FFF7FEFF 		bl	USBD_CDC_ReceivePacket
 274:Src/usbd_cdc_if.c ****   return (USBD_OK);
 240              		.loc 1 274 0
 241 0018 0023     		movs	r3, #0
 275:Src/usbd_cdc_if.c ****   /* USER CODE END 11 */ 
 276:Src/usbd_cdc_if.c **** }
 242              		.loc 1 276 0
 243 001a 1846     		mov	r0, r3
 244 001c 0837     		adds	r7, r7, #8
 245              	.LCFI15:
 246              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccKBdeFC.s 			page 10


 247 001e BD46     		mov	sp, r7
 248              	.LCFI16:
 249              		.cfi_def_cfa_register 13
 250              		@ sp needed
 251 0020 80BD     		pop	{r7, pc}
 252              	.L25:
 253 0022 00BF     		.align	2
 254              	.L24:
 255 0024 00000000 		.word	hUsbDeviceHS
 256              		.cfi_endproc
 257              	.LFE127:
 259              		.section	.text.CDC_Transmit_HS,"ax",%progbits
 260              		.align	1
 261              		.global	CDC_Transmit_HS
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	CDC_Transmit_HS:
 268              	.LFB128:
 277:Src/usbd_cdc_if.c **** /**
 278:Src/usbd_cdc_if.c ****   * @brief  CDC_Transmit_HS
 279:Src/usbd_cdc_if.c ****   *         Data send over USB IN endpoint are sent over CDC interface 
 280:Src/usbd_cdc_if.c ****   *         through this function.           
 281:Src/usbd_cdc_if.c ****   *         @note
 282:Src/usbd_cdc_if.c ****   *         
 283:Src/usbd_cdc_if.c ****   *                 
 284:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be send
 285:Src/usbd_cdc_if.c ****   * @param  Len: Number of data to be send (in bytes)
 286:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL or USBD_BUSY
 287:Src/usbd_cdc_if.c ****   */
 288:Src/usbd_cdc_if.c **** uint8_t CDC_Transmit_HS(uint8_t* Buf, uint16_t Len)
 289:Src/usbd_cdc_if.c **** {
 269              		.loc 1 289 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 16
 272              		@ frame_needed = 1, uses_anonymous_args = 0
 273 0000 80B5     		push	{r7, lr}
 274              	.LCFI17:
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 7, -8
 277              		.cfi_offset 14, -4
 278 0002 84B0     		sub	sp, sp, #16
 279              	.LCFI18:
 280              		.cfi_def_cfa_offset 24
 281 0004 00AF     		add	r7, sp, #0
 282              	.LCFI19:
 283              		.cfi_def_cfa_register 7
 284 0006 7860     		str	r0, [r7, #4]
 285 0008 0B46     		mov	r3, r1
 286 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 290:Src/usbd_cdc_if.c ****   uint8_t result = USBD_OK;
 287              		.loc 1 290 0
 288 000c 0023     		movs	r3, #0
 289 000e FB73     		strb	r3, [r7, #15]
 291:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 12 */ 
 292:Src/usbd_cdc_if.c ****   USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef*)hUsbDeviceHS.pClassData;
ARM GAS  /tmp/ccKBdeFC.s 			page 11


 290              		.loc 1 292 0
 291 0010 0D4B     		ldr	r3, .L29
 292 0012 D3F81832 		ldr	r3, [r3, #536]
 293 0016 BB60     		str	r3, [r7, #8]
 293:Src/usbd_cdc_if.c ****   if (hcdc->TxState != 0){
 294              		.loc 1 293 0
 295 0018 BB68     		ldr	r3, [r7, #8]
 296 001a D3F81432 		ldr	r3, [r3, #532]
 297 001e 002B     		cmp	r3, #0
 298 0020 01D0     		beq	.L27
 294:Src/usbd_cdc_if.c ****     return USBD_BUSY;
 299              		.loc 1 294 0
 300 0022 0123     		movs	r3, #1
 301 0024 0BE0     		b	.L28
 302              	.L27:
 295:Src/usbd_cdc_if.c ****   }
 296:Src/usbd_cdc_if.c ****   USBD_CDC_SetTxBuffer(&hUsbDeviceHS, Buf, Len);
 303              		.loc 1 296 0
 304 0026 7B88     		ldrh	r3, [r7, #2]
 305 0028 1A46     		mov	r2, r3
 306 002a 7968     		ldr	r1, [r7, #4]
 307 002c 0648     		ldr	r0, .L29
 308 002e FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
 297:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceHS);
 309              		.loc 1 297 0
 310 0032 0548     		ldr	r0, .L29
 311 0034 FFF7FEFF 		bl	USBD_CDC_TransmitPacket
 312 0038 0346     		mov	r3, r0
 313 003a FB73     		strb	r3, [r7, #15]
 298:Src/usbd_cdc_if.c ****   /* USER CODE END 12 */ 
 299:Src/usbd_cdc_if.c ****   return result;
 314              		.loc 1 299 0
 315 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 316              	.L28:
 300:Src/usbd_cdc_if.c **** }
 317              		.loc 1 300 0
 318 003e 1846     		mov	r0, r3
 319 0040 1037     		adds	r7, r7, #16
 320              	.LCFI20:
 321              		.cfi_def_cfa_offset 8
 322 0042 BD46     		mov	sp, r7
 323              	.LCFI21:
 324              		.cfi_def_cfa_register 13
 325              		@ sp needed
 326 0044 80BD     		pop	{r7, pc}
 327              	.L30:
 328 0046 00BF     		.align	2
 329              	.L29:
 330 0048 00000000 		.word	hUsbDeviceHS
 331              		.cfi_endproc
 332              	.LFE128:
 334              		.text
 335              	.Letext0:
 336              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 337              		.file 3 "/usr/arm-none-eabi/include/sys/lock.h"
 338              		.file 4 "/usr/arm-none-eabi/include/sys/_types.h"
 339              		.file 5 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
ARM GAS  /tmp/ccKBdeFC.s 			page 12


 340              		.file 6 "/usr/arm-none-eabi/include/sys/reent.h"
 341              		.file 7 "/usr/arm-none-eabi/include/sys/_stdint.h"
 342              		.file 8 "/usr/arm-none-eabi/include/stdlib.h"
 343              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 344              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 345              		.file 11 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 346              		.file 12 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 347              		.file 13 "Inc/usbd_cdc_if.h"
ARM GAS  /tmp/ccKBdeFC.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_cdc_if.c
                            *COM*:0000000000000800 UserRxBufferHS
                            *COM*:0000000000000800 UserTxBufferHS
     /tmp/ccKBdeFC.s:24     .data.USBD_Interface_fops_HS:0000000000000000 USBD_Interface_fops_HS
     /tmp/ccKBdeFC.s:21     .data.USBD_Interface_fops_HS:0000000000000000 $d
     /tmp/ccKBdeFC.s:36     .text.CDC_Init_HS:0000000000000000 CDC_Init_HS
     /tmp/ccKBdeFC.s:81     .text.CDC_DeInit_HS:0000000000000000 CDC_DeInit_HS
     /tmp/ccKBdeFC.s:118    .text.CDC_Control_HS:0000000000000000 CDC_Control_HS
     /tmp/ccKBdeFC.s:214    .text.CDC_Receive_HS:0000000000000000 CDC_Receive_HS
     /tmp/ccKBdeFC.s:30     .text.CDC_Init_HS:0000000000000000 $t
     /tmp/ccKBdeFC.s:68     .text.CDC_Init_HS:000000000000001c $d
     /tmp/ccKBdeFC.s:75     .text.CDC_DeInit_HS:0000000000000000 $t
     /tmp/ccKBdeFC.s:112    .text.CDC_Control_HS:0000000000000000 $t
     /tmp/ccKBdeFC.s:148    .text.CDC_Control_HS:000000000000001c $d
     /tmp/ccKBdeFC.s:184    .text.CDC_Control_HS:00000000000000ac $t
     /tmp/ccKBdeFC.s:208    .text.CDC_Receive_HS:0000000000000000 $t
     /tmp/ccKBdeFC.s:255    .text.CDC_Receive_HS:0000000000000024 $d
     /tmp/ccKBdeFC.s:260    .text.CDC_Transmit_HS:0000000000000000 $t
     /tmp/ccKBdeFC.s:267    .text.CDC_Transmit_HS:0000000000000000 CDC_Transmit_HS
     /tmp/ccKBdeFC.s:330    .text.CDC_Transmit_HS:0000000000000048 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
USBD_CDC_SetTxBuffer
USBD_CDC_SetRxBuffer
hUsbDeviceHS
USBD_CDC_ReceivePacket
USBD_CDC_TransmitPacket
